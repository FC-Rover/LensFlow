name: lens-flow
summary: An applet to stream pi camera over http.
description: An applet to stream pi camera over http.
base: core22
adopt-info: lens-flow
confinement: strict
license: GPL-3.0
grade: devel
architectures:
  - build-on: [arm64, amd64]
    build-for: [arm64]


layout:
  /var/log/nginx:
    bind: $SNAP_DATA/var/log/nginx
  /var/www/html/stream:
    bind: $SNAP_COMMON/var/www/html/stream
  /usr/nginx/modules:
    bind: $SNAP_DATA/usr/nginx/modules
  /usr/nginx/conf:
    bind: $SNAP_DATA/usr/nginx/conf


apps:
  lens-flow:
    command: bin/lens-flow
    daemon: simple
    restart-condition: on-failure
    plugs:
      - camera
      - media-control
      - hardware-observe
      - opengl
    environment:
      PYTHONPATH: $SNAP/usr/lib/aarch64-linux-gnu/python3.10/site-packages
      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/usr/lib/aarch64-linux-gnu/pulseaudio:$SNAP/usr/lib/aarch64-linux-gnu/blas:$SNAP/usr/lib/aarch64-linux-gnu/caca:$SNAP/usr/lib/aarch64-linux-gnu/lapack

  nginx:
    command: bin/nginx
    daemon: forking
    restart-condition: on-failure
    plugs:
      - network
      - network-bind


parts:
  lens-flow:
    plugin: python
    source: .
    after:
      - libcamera
      - pykms
    build-packages:
      - libcap-dev
    stage-packages:
      - ffmpeg
    python-packages:
      - setuptools
      - pip
      - wheel
    override-build: |
      craftctl default
      version="$(python3 setup.py --version)"
      craftctl set version="$version"

  libcamera:
    plugin: meson
    source: https://github.com/raspberrypi/libcamera.git
    source-type: git
    source-commit: d477ee97bc2a086b5f486e4a967a08fcf68c35c9
    meson-parameters:
      - --prefix=/snap/lens-flow/current/usr
      - --buildtype=release
      - -Dpipelines=rpi/vc4
      - -Dipas=rpi/vc4
      - -Dv4l2=true
      - -Dgstreamer=enabled
      - -Dtest=false
      - -Dlc-compliance=disabled
      - -Dcam=disabled
      - -Dqcam=disabled
      - -Ddocumentation=disabled
      - -Dpycamera=enabled
    organize:
      snap/lens-flow/current/usr: usr
      snap/lens-flow/current/lib: lib
    build-packages:
      - build-essential
      - meson
      - ninja-build
      - pkg-config
      - pybind11-dev
      - python3-pybind11
      - cmake
      - libgtest-dev
      - libyaml-dev
      - python3-yaml
      - python3-ply
      - python3-jinja2
      - libgnutls28-dev
      - libssl-dev
      - openssl
      - libdw-dev
      - libunwind-dev
      - libudev-dev
      - python3-sphinx
      - graphviz
      - texlive-latex-extra
      - libgstreamer1.0-dev
      - libgstreamer-plugins-base1.0-dev
      - libdrm-dev
      - libjpeg-dev
      - libsdl2-dev
      - qtbase5-dev
      - libqt5core5a
      - libqt5gui5
      - libqt5widgets5
      - qttools5-dev-tools
      - libtiff-dev
      - liblttng-ust-dev
      - lttng-tools
      - libexif-dev
      - libevent-dev
      - abi-compliance-checker
      - libboost-all-dev
    stage-packages:
      - liblttng-ust1
      - libdw1
      - libssl3
      - libunwind8
      - libudev1
      - libgstreamer1.0-0
      - libgstreamer-plugins-base1.0-0
      - libdrm2
      - libjpeg8
      - libsdl2-2.0-0
      - libevent-2.1-7
      - libexif12
      - libtiff5
      - libboost-log1.74.0

  pykms:
    plugin: meson
    source: https://github.com/tomba/kmsxx.git
    meson-parameters:
      - --prefix=/snap/lens-flow/current/usr
    organize:
      snap/lens-flow/current/usr: usr
      snap/lens-flow/current/lib: lib
    build-packages:
      - libdrm-dev
      - libdrm2
      - libfmt-dev
    stage-packages:
      - libfmt8

  nginx:
    plugin: autotools
    source: http://nginx.org/download/nginx-1.25.3.tar.gz
    build-packages:
      - libpcre3-dev
      - libssl-dev
      - pkg-config
    autotools-configure-parameters:
      - --prefix=/usr/nginx
      - --sbin-path=/bin/nginx
      - --modules-path=/usr/nginx/modules
      - --conf-path=/usr/nginx/conf/nginx.conf
      - --error-log-path=/var/log/nginx/error.log
      - --http-log-path=/var/log/nginx/access.log
      - --pid-path=/var/log/nginx/nginx.pid
      - --lock-path=/var/log/nginx/nginx.lock
      - --with-http_ssl_module
      - --add-module=extras/nginx-rtmp-module
    override-build: |
      cp -r $CRAFT_PROJECT_DIR/extras $CRAFT_PART_BUILD/extras
      craftctl default
      cat $CRAFT_PART_BUILD/extras/nginx-config/main.conf >>$CRAFT_PART_INSTALL/usr/nginx/conf/nginx.conf
      mkdir -p $CRAFT_PART_INSTALL/etc/nginx/sites-available
      mkdir -p $CRAFT_PART_INSTALL/etc/nginx/sites-enabled
      cp $CRAFT_PART_BUILD/extras/nginx-config/default.conf $CRAFT_PART_INSTALL/etc/nginx/sites-available/default
      cp $CRAFT_PART_BUILD/extras/nginx-config/dash.conf $CRAFT_PART_INSTALL/etc/nginx/sites-available/rtmp
      export "MAIN_WORK_DIR=$PWD"
      cd $CRAFT_PART_INSTALL/etc/nginx/sites-enabled
      ln -s ../sites-available/rtmp rtmp
      cd $MAIN_WORK_DIR
      sed -i '/^$/ {s/^/include \/etc\/nginx\/sites-enabled\/*;/; :a; n; ba}' $CRAFT_PART_INSTALL/usr/nginx/conf/nginx.conf
    # override-prime: |
    #   craftctl default
    #   cp $CRAFT_PRIME/etc/nginx/sites-available/default $CRAFT_PRIME/etc/nginx/sites-available/rtmp
    #   cat $CRAFT_PART_SRC/dash.conf >$CRAFT_PRIME/etc/nginx/sites-available/rtmp
    #   ln -s $CRAFT_PRIME/etc/nginx/sites-available/rtmp $CRAFT_PRIME/etc/nginx/sites-enabled/rtmp
    #   cat $CRAFT_PART_SRC/main.conf >>$CRAFT_PRIME/etc/nginx/nginx.conf
    #   sed -i '0,/^$/s//load_module \/usr\/lib\/nginx\/modules\/ngx_rtmp_module.so;\n/' $CRAFT_PRIME/etc/nginx/nginx.conf
